@using Newtonsoft.Json
@model IEnumerable<Mashup.Models.TrafficMessage>

@{
    ViewBag.Title = "trafikmeddelanden";
}

<h2>Trafikmeddelanden</h2>


@section scripts {

<section class="scripts">
    <script type="text/javascript" src="http://maps.google.com/maps/api/js"></script> 
    

    <script type="text/javascript">
   
    var data = @Html.Raw(JsonConvert.SerializeObject(Model))

    $(document).ready(function () {
        Initialize(data);
    });

    function Initialize(data) {

        google.maps.visualRefresh = true;
        //var result = JSON.parse(data);
        //var Sweden = new google.maps.LatLng(result["latitude"],result["longitude"]); //61.02, 14.38);
        var Sweden = new google.maps.LatLng(61.02, 14.38);

        var mapOptions = {
            zoom: 5,
            center: {lat: 61.39, lng: 15.35},
            mapTypeId: google.maps.MapTypeId.ROADMAP,
        };

        // This makes the div with id "map_canvas" a google map
        var map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);

        // This shows adding a simple pin "marker" - this happens to be the Tate Gallery in Liverpool!
        //var myLatlng = new google.maps.LatLng(61.02, 14.38);

        //console.log(data);
        $.each(data, function (i, item) {
            var marker = new google.maps.Marker({
                position: new google.maps.LatLng(item["Latitude"], item["Longitude"]),
                map: map,
                title: item['title']
            });


            // You can make markers different colors...  google it up!
            marker.setIcon('http://maps.google.com/mapfiles/ms/icons/green-dot.png')

            // put in some information about each json object 
            var infowindow = new google.maps.InfoWindow({
                content: "<div class='infoDiv'><h2>" + item["ExactLocation"] + "</h2>" + "<div><h4>Tid: " + item["CreatedDate"] + "</h4></div></div>"
            });

            // finally hook up an "OnClick" listener to the map so it pops up out info-window when the marker-pin is clicked!
            google.maps.event.addListener(marker, 'click', function () {
                infowindow.open(map, marker);
            });
        })
    }
</script>
</section>
}

<!-- This is the div that will contain the Google Map -->
<div id="map_canvas" style="height: 800px;"></div>

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.priority)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CreatedDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Title)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ExactLocation)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Latitude)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Longitude)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Category)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SubCategory)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.priority)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ExactLocation)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Latitude)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Longitude)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Category)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SubCategory)
            </td>
        </tr>
    }

</table>

